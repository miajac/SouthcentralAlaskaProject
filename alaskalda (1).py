# -*- coding: utf-8 -*-
"""AlaskaLDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1APWDqIrzYfd3JyxvAhZrIcHmhyrRqM18

# Alaska Data Linear Discriminant Analysis
## LDA With All Locations as Categories
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.model_selection import cross_val_score

df = pd.read_excel('AlaskaPCA_2022_2023.xlsx')
print(df.head())

df_Ak = df.select_dtypes(include=[np.number])
df_Ak = df_Ak.iloc[:, 1:]
print(df_Ak)

# Z-score the data
scaler = StandardScaler()
df_scaled = scaler.fit_transform(df_Ak)

# Create the LDA model
lda = LinearDiscriminantAnalysis()

# Fit the LDA model to your data
y_pred = lda.fit(df_scaled, df['Location ID']).predict(df_scaled)

# Transform the data to its lower-dimensional form
lda_transformed = lda.transform(df_scaled)
lda_df = pd.DataFrame(lda_transformed, columns=[f'LD {i+1}' for i in range(lda_transformed.shape[1])])
lda_df['Location ID'] = df['Location ID'].values

# To get the coefficients of the LDA model
df_lda_coeffs = pd.DataFrame(lda.coef_, index=['LD ' + str(i+1) for i in range(lda_df.shape[1])],
                             columns=df_Ak.columns)
df_lda_coeffs = df_lda_coeffs.T

print("LDA Scores")
lda_df

# Export the LDA Scores DataFrame to an Excel file
lda_df.to_excel('lda_scores.xlsx', index=False)

# Download the Excel file to your local computer
from google.colab import files
files.download('lda_scores.xlsx')

# @title LD 2 vs LD 3

from matplotlib import pyplot as plt
lda_df.plot(kind='scatter', x='LD 2', y='LD 3', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title LD 1

from matplotlib import pyplot as plt
lda_df['LD 1'].plot(kind='hist', bins=20, title='LD 1')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Scatterplot of LD1 vs LD2, colored by Location ID

import matplotlib.pyplot as plt
import seaborn as sns
palette = sns.color_palette("husl", n_colors=len(lda_df['Location ID'].unique()))
sns.scatterplot(x='LD 1', y='LD 2', hue='Location ID', data=lda_df, s=50, alpha=0.5, palette=palette)
plt.xlabel('LD1')
plt.ylabel('LD2')
_ = plt.title('LD1 vs LD2')

# @title Boxplot of LDs by Location ID

sns.boxplot(x='Location ID', y='LD 1', data=lda_df)
sns.boxplot(x='Location ID', y='LD 2', data=lda_df)
sns.boxplot(x='Location ID', y='LD 3', data=lda_df)
sns.boxplot(x='Location ID', y='LD 4', data=lda_df)
sns.boxplot(x='Location ID', y='LD 5', data=lda_df)
sns.boxplot(x='Location ID', y='LD 6', data=lda_df)

lda_expl_var_pct = pd.Series(100*lda.explained_variance_ratio_, index=['LD ' + str(i+1) for i in range(lda_df.shape[1]-1)])
lda_expl_var_pct

df_lda_coeffs

# Take the first LD, and sort the coefficients by value.
LD1 = df_lda_coeffs['LD 1']

# Sort
LD1_sort = LD1.sort_values()
print('LD 1 Coeffs')
LD1_sort

# Take the second LD, and sort the coefficients by value.
LD2 = df_lda_coeffs['LD 2']

# Sort
LD2_sort = LD2.sort_values()
print('LD 2 Coeffs')
LD2_sort

# Take the third LD, and sort the coefficients by value.
LD3 = df_lda_coeffs['LD 3']

# Sort
LD3_sort = LD3.sort_values()
print('LD 3 Coeffs')
LD3_sort

# Take the fourth LD, and sort the coefficients by value.
LD4 = df_lda_coeffs['LD 4']

# Sort
LD4_sort = LD4.sort_values()
print('LD 4 Coeffs')
LD4_sort

LDA_Loc = df['Location ID']
LDA_pred = pd.DataFrame(y_pred, columns=['Predicted'])
LDA_pred = pd.concat([LDA_Loc, LDA_pred], axis=1)
LDA_pred