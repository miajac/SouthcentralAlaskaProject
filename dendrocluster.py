# -*- coding: utf-8 -*-
"""DendroCluster.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17p7JUCDf8tRtPNolt-b6r-4Vg5-HTW6z

# Southcentral Alaska Dengro Cluster
## Hierarchical Cluster Analysis
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from scipy.cluster.hierarchy import dendrogram, linkage
from scipy.cluster import hierarchy

# Replace '/path/to/AbbyData.xlsx' with the actual file path
df = pd.read_excel('Dendro_data.xlsx', 'Sheet2')
print(df.head())

df['Sample ID'].values

# Filter only numerical columns for clustering
numerical_df = df.select_dtypes(include=[np.number])

# Hierarchical clustering
linked = linkage(numerical_df, method='ward')

# Create a color threshold array for dendrogram
cluster_ids = hierarchy.fcluster(linked, t=1, criterion='inconsistent')
colors = pd.Series(cluster_ids).map(dict(zip(df['Sample ID'].unique(), 'bgrcmyk')))


# Create the dendrogram
plt.figure(figsize=(15, 7))
dendrogram(linked,
           orientation='top',
           labels=df['Sample ID'].values,
           distance_sort='descending',
           show_leaf_counts=True,
           leaf_rotation=90,
           leaf_font_size=10)

plt.title('Hierarchical Clustering Dendrogram (Raw Data)')
plt.xlabel('Sample')
plt.ylabel('Euclidean distances')
plt.show()

# Z-score the data
scaler = StandardScaler()
df_scaled = scaler.fit_transform(numerical_df)

# Hierarchical clustering
linked = linkage(df_scaled, method='ward')

# Create a color threshold array for dendrogram
cluster_ids = hierarchy.fcluster(linked, t=1, criterion='inconsistent')
colors = pd.Series(cluster_ids).map(dict(zip(df['Sample ID'].unique(), 'bgrcmyk')))

# Create the dendrogram
plt.figure(figsize=(40, 7))
dendrogram(linked,
           orientation='top',
           labels=df['Sample ID'].values,
           distance_sort='descending',
           show_leaf_counts=True,
           leaf_rotation=90,
           leaf_font_size=10)

#plt.title('Hierarchical Clustering Dendrogram (Z-Scored Data)')
plt.xlabel('Location', fontsize=20)
plt.ylabel('Euclidean distances', fontsize=20)
plt.xticks(fontsize=8)
plt.yticks(fontsize=16)
plt.show()

# Z-score the data
scaler = StandardScaler()
df_scaled = scaler.fit_transform(numerical_df)
df['Sample ID'] = df['Sample ID'].astype(str)
df['CompleteLabel'] = df['BYU Lab ID'].astype(str) + '_' + df['Sample ID'] + '_' + df['Sample Date'].astype(str)
# Hierarchical clustering
linked = linkage(df_scaled, method='ward')
# Create a color threshold array for dendrogram
cluster_ids = hierarchy.fcluster(linked, t=1, criterion='inconsistent')
colors = pd.Series(cluster_ids).map(dict(zip(df['Sample ID'].unique(), 'bgrcmyk')))
# Create the dendrogram
plt.figure(figsize=(40, 7))
dendrogram(linked,
           orientation='top',
           labels=df['CompleteLabel'].values,
           distance_sort='descending',
           show_leaf_counts=True,
           leaf_rotation=90,
           leaf_font_size=10)
plt.title('Hierarchical Clustering Dendrogram (Z-Scored Data)')
plt.xlabel('Sample')
plt.ylabel('Euclidean distances')
plt.show()

print(linked)